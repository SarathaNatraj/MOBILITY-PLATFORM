{\rtf1\ansi\ansicpg1252\cocoartf2684
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red155\green35\blue147;\red255\green255\blue255;\red0\green0\blue0;
\red15\green104\blue160;\red196\green26\blue22;\red108\green54\blue169;\red50\green109\blue116;\red57\green0\blue160;
\red93\green108\blue121;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c22454\c0\c62803;
\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23020\viewh12240\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \cb3 var
\f1\b0 \cf4  \cf5 greeting\cf4  = \cf6 "Hello, playground"\cf4 \
\cf7 print\cf4 (\cf6 "Greeting : \cf4 \\(\cf8 greeting\cf4 )\cf6 "\cf4 )\
\

\f0\b \cf2 let
\f1\b0 \cf4  \cf5 publisher\cf4  = \cf9 Just\cf4 (\cf6 "Hello, Combine!"\cf4 ) \cf10 // Emits a single value\cf4 \

\f0\b \cf2 let
\f1\b0 \cf4  \cf5 subscriber\cf4  = \cf8 publisher\cf4 .\cf7 sink\cf4  \{ value 
\f0\b \cf2 in
\f1\b0 \cf4 \
    \cf7 print\cf4 (value) \cf10 // Prints: Hello, Combine!\cf4 \
\}\
\
\

\f0\b \cf2 let
\f1\b0 \cf4  \cf5 numbers\cf4  = [\cf11 1\cf4 , \cf11 2\cf4 , \cf11 3\cf4 , \cf11 4\cf4 , \cf11 5\cf4 ].\cf7 publisher //Emit a multiple values\cf4 \
\

\f0\b \cf2 let
\f1\b0 \cf4  \cf5 subscriber1\cf4  = \cf8 numbers\cf4 \
    .\cf7 map\cf4  \{ $0 * \cf11 10\cf4  \} \cf10 // Multiply each value by 10\cf4 \
    .\cf7 filter\cf4  \{ $0 > \cf11 20\cf4  \} \cf10 // Only allow values greater than 20\cf4 \
    .\cf7 sink\cf4  \{ \cf7 print\cf4 ($0) \} \cf10 // Prints: 30, 40, 50\cf4 \
\
//subject with subscribers\

\f0\b \cf2 let
\f1\b0 \cf4  \cf5 subject\cf4  = \cf9 PassthroughSubject\cf4 <\cf7 String\cf4 , \cf9 Never\cf4 >()\
\

\f0\b \cf2 let
\f1\b0 \cf4  \cf5 subscription\cf4  = \cf8 subject\cf4 .\cf7 sink\cf4  \{ \cf7 print\cf4 ($0) \}\
\
\cf8 subject\cf4 .\cf7 send\cf4 (\cf6 "First message"\cf4 ) \cf10 // Prints: First message\cf4 \
\cf8 subject\cf4 .\cf7 send\cf4 (\cf6 "Second message"\cf4 ) \cf10 // Prints: Second message\cf4 \
\
\

\f0\b \cf2 let
\f1\b0 \cf4  \cf5 currentValueSubject\cf4  = \cf9 CurrentValueSubject\cf4 <\cf7 String\cf4 ,\cf9 Never\cf4 >(\cf6 "Intiial Value"\cf4 )\
\

\f0\b \cf2 let
\f1\b0 \cf4  \cf5 subscibe\cf4  = \cf8 currentValueSubject\cf4 .\cf7 sink\cf4  \{ value 
\f0\b \cf2 in
\f1\b0 \cf4 \
    \cf7 print\cf4 (\cf6 "Received value : \cf4 \\(value)\cf6 "\cf4 )\
\}\
\
\
\cf8 currentValueSubject\cf4 .\cf7 send\cf4 (\cf6 "Hello Combine"\cf4 )\
\
currentValueSubject.\cf7 send\cf4 (\cf6 "Hello Swift UI with combine "\cf4 )\
\
//Received value :  Initial Value\
//Receoved value : Hello Combine\
\
\
//Just - > publisher side to produce a sing le value\
\
//sink -> subscriber side - received the data with closures\
\
//AnyCancellable -> To retain subscriptions an cancels them at any time when longer needed, avoid canceallations\
\
\
\
\
//with out store cancellations\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\b \cf4 \cb1 \CocoaLigature0 Updated budget: $0.0\
Income added : $500.0\
Expense recoreded: $100.0\
Insufficent balance for this expense !\
\
//with store cancellations\
Updated budget: $0.0\
Updated budget: $500.0\
Income added : $500.0\
Updated budget: $400.0\
Expense recoreded: $100.0\
Insufficent balance for this expense !\
}