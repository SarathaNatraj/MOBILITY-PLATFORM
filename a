import SwiftUI

struct TransactionFormView: View {
    @Environment(\.presentationMode) var presentationMode
    @ObservedObject var viewModel: TransactionViewModel
    @State var transaction: Transaction
    
    var body: some View {
        NavigationView {
            Form {
                Section(header: Text("Transaction Details")) {
                    TextField("Amount", value: $transaction.amount, formatter: NumberFormatter())
                        .keyboardType(.decimalPad)
                    
                    TextField("Description", text: $transaction.description)
                    
                    Picker("Category", selection: $transaction.category) {
                        Text("Income").tag("Income")
                        Text("Expense").tag("Expense")
                    }
                    .pickerStyle(SegmentedPickerStyle())
                }
                
                Button(action: {
                    if let existingTransaction = viewModel.transactions.first(where: { $0.id == transaction.id }) {
                        viewModel.updateTransaction(transaction)
                    } else {
                        viewModel.addTransaction(transaction)
                    }
                    presentationMode.wrappedValue.dismiss()
                }) {
                    Text("Save Transaction")
                        .frame(maxWidth: .infinity)
                        .padding()
                        .background(Color.blue)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                }
            }
            .navigationTitle(transaction.id == UUID() ? "New Transaction" : "Edit Transaction")
        }
    }
}
