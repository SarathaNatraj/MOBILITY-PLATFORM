1. Dependency Injection in Android
2. Testing of Android Apps

class Address{
	val streetName:String
	val city:String
	val pincode:String

	fun setHomeAddress(){
		
	}
}

class Employee{

	val name:String
	val email:String
	//val address:Address
	
val streetName:String
	val city:String
	val pincode:String
	

	

}

val addr = Address('XYZ Street', 'Hyderabad', '5689990')

val e = Employee('chaitanya', 'chaitany@gmail.com', addr)


class User{

	val name:String,
	val dob:Date,
	val aadhar:String,
	//val addr:Address

	val streetName:String
	val city:String
	val pincode:String


}

val user = User('chaitanya', 12/12/2007,'784691255222', addr)




class Customer{
	val name:String,
	val email:String,
	//val addr:Address

	val streetName:String
	val city:String
	val pincode:String

}


class Customer(val name:String, ... , val addr:Address){ // constructor based injection


class Customer{
	val name:String,
	val email:String,
	@Inject val addr:Address //field based injection

	

}



Hilt & Dagger - popular DI libs

Dagger- Full feature lib, resolves dependencies at compile time 
Hilt - built on top of dagger, provides more Android-specific components, eliminates duplicate code

Hilt Vs Dagger
	  Hilt is easier, bcoz predefined annotation for Android components
	  Automatically integrates with Activity, Fragment, ViewModel etc...
	 easy to maintain, testing