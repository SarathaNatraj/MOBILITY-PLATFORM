Navigation with arguments

1. Add plugins in project's build.gradle.kts,you have add plugin version,
	inside gradle\libs.versions.toml
		[versions]
			safeargs = "2.7.1"
		[plugins]
			kotlin-safeargs = {id= "androidx.navigation.safeargs", version.ref="safeargs"}
			

2. Add project's build.gradle.kts
	alias(libs.plugins.kotlin.safeargs) apply false

3. Add following lines, inside your app's build.gradle.kts
	
	id ("kotlin-parcelize")// adding @Parcelize and your data class has to implements Parcelable
   	id ("androidx.navigation.safeargs.kotlin")
4. Inside nav_graph, for which navigation link, provide args
	 <argument
                android:name="selectedMovie"
                app:argType="com.example.mymovieapp.model.Movie"
                />

inside fetch peopleResponse{protocol=h2, code=400, message=, url=https://api.tvmaze.com/search/people}
2025-01-18 11:48:24.352 22420-22420 Compatibil...geReporter com.example.personinfo

interface ApiService {
    @GET("search/people")
    suspend fun searchPeople(@Query("q") query: String): Response<List<PersonResponse>>
}



lifecycleScope.launch { //launch in coroutines 
    try {
        val response = apiService.searchPeople("lauren")
        if (response.isSuccessful) {
            val people = response.body()
            if (people != null) {
                // Do something with the list of people
                for (person in people) {
                    Log.d("Person", "Name: ${person.person.name}")
                }
            } else {
                Log.e("API Error", "Empty response body.")
            }
        } else {
            Log.e("API Error", "Error code: ${response.code()}, message: ${response.message()}")
        }
    } catch (e: Exception) {
        Log.e("Network Error", e.message ?: "Unknown error")
    }
}
     


Day 7: WorkManager for Background Tasks
Task 1: Implement WorkManager to periodically sync device states with the server.
Task 2: Use WorkManager to schedule tasks for device automation based on user-defined rules      



